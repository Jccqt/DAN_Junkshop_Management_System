<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>