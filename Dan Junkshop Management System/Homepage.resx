<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKoAAACqCAYAAAA9dtSCAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAACDxJREFUeF7t3HuMJFUVx/EBH8D6QhBx4+ISMrq743TVObdndxj9Y0cwwRGjUbMo
        aoxCMCrBmFWjYuKa+E4UEhMR1gQTiIkKf6ARoygaVEzUFUEj+AhCFF0BwXdQFjjm3Kqe7b7Vj6ruHhl3
        v5/kl+x2V52qmTlTXXVv1czMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgs2K5dj7E8f52JnD+FvNVU32yq55rq2aa6YiLbrd3eaDMz
        R6TbBmqzubnHm+qPTdXWOA+Y6k0WwqXxF0N1zpaXH5vuzzTZ0tIx1m5v7RuRY9Plx2Unn3y0zc09sVFm
        Z49K69Rle/YcWak3LIfCQeJ/2Kj9st9UP2ohzKb7NSmbmTnSRK7rs80iIl+ydntDut44LIRfVuqPish9
        Nj9/UlqrDlM9vVJvcP5qrdYpaY3/O49yo3ZywFQ/a/PzJ6b7Ny4L4fw+2+mNyGvS9cYxVqMW+all2RPS
        eqPQqI92ih/4UrqPTVmeP8dEflepX81dlufPTNdvaoJG9V+Wy2x29slpzWFo1PUQkbssy05L97MJE/l8
        pe6giOz170Fao4mJGrXIO5rsA426fvIz27ZtY7qvdVgIryov3NKa/zCR+yuvizxsef6StE4TU2jURyzP
        31T3oodGrZdPxmGnNCJnWpa9Mg5Niewx1asthD/GRqjWGB2Rvem+jmJzc8eZ6i8qtYp6H7I8/0Tl9eK9
        n9jiYqOP325TaFTPP011Z1q7Hxq1TvL8nLTGIHHYJoRTTfV6E3mkUmtYRB7woZW05jCm+plKnaLWndZu
        P8W2bj3eVP9Qeb9Y5uK0Xl1TalQ/R7/dFha2pPVTNGqdNGjUDh8vNZF3Nm5W1RemtQaxEE4bcvR+6epy
        eX5Wn/c9B0zk+b1V65laoxa52ZaWjku30Y1GrZMxGtXFGTDVayv1hiXP353W6cfHQ031h5X1PSI3dk8s
        xK9X5KbKckX2jTMQ36hRRf5deS1NCF8cNhlCo9bJmI3qTGS5Um9YRC5Ja6TM7AhT/WBl3YM13mshvKgn
        g5f3I/7udBujNGzUi+LFYvp6bx62ED6cbqeDRq2TSRq11Xpqpd7wXJ3WSFme64Cr/HFzn2VZSLczTKNG
        Vd1teb7DVO/p897B+Dm66tvSbTkatU4madSZGT/6+SxUtW6/iHw9rdHNVlaOanw6USciX/X59HR7gzRt
        1LhOlvk59ahz9r/0G1OmUetkgkZ1pjr6HK0TkevS9buZ6jmVdaaTA5Zl56bbG2ScRo3rqb6lz/tp9vtM
        W8/2aNQamaBRfayyUm9YRK5Ja3RYCNtMtTqAX+TBclyyTnzZdH3Pn+pOr47dqMUnzKfKc+N0ue7calu2
        PGl1PRq1RiZpVNWFSr3huTSt4eJtbiJX9Vne85Dl+SvSdQaxEM4bOKwVwhfqzBaN26hx3Xb7cX6K02e5
        3oh8uzMSQKPWySSNGsLFlXrDIvK+tIYzkdea6n8qy3tC+EaTIabYKCHcUKlTbN8vaM5O10lN0qhx/eKT
        Zl+fZXtTztbRqHUyZqNau31mjY+4NKsD9at1inHQa0zkO5X4DFiWLabrjFJOFlTrFTWv8ntb03W6Tdqo
        rjyVubvP8r0ROY9GrZOGjWqqJ5jqJZU6o+Ifx3Nzz0jrrUfTaFRX3jfxtz7rdMdPU/y8Nn19UA7TRhV5
        l4k8u5Is22ILC/OWZaeW05QfM9UbxziKdnJFuq/r1bQa1Znqqwee1oyXw7RRi2/i3wfkX43GSQfn/nRI
        Zj2bZqM6C+EDE/yCpzlsG3Wt86Dfm5nu53o29Uad7kQGjboGudefY+o3K2QbN27wu4psx47jfUwx3pHV
        bj8t/jvLnt55UC9O0/pNKiLHdp40jV+jL1M+/Wmqm+P7fp+A38PaWddrb9p0TPx3cW69OW7Hl/P1Pb5M
        sn/TblTnz49N6edCo04x/jF3vbVarXT/Okzk46b6lfLOpwviI8+qd1i7/Z7yavnasgm/ZiJvN9Uvx4uO
        PH+uhbDPRK60LJs31VtM9dcWwq2WZX717P9/fWxi1dssz19e3rTiy9wWh41arVPiL5HflB2C31Dy3Z4B
        +DVoVGeqebz5vFqjSWjUCePN+eeyoU7vN7Aej2ghvDE2YAifNpEfmMjtJnJhvHDzx0tCuNBCeMhC2Gsh
        XGaqN8Q7plS/aaq/iT8ov2PJx0vb7WCqd5rqz03kRybyMlP1RvCLvivK8+sLLIT9FoL/7YHNcb69aHwf
        o70yxs/Hux51XqtGdeXdXoNmz+qERm0Qb0qf47+7PLpdZHl+hn+MpvvTzbZvP8lE/CLtW6b6+3ik84fx
        /AHAEL5nIr+1EM6KjVo09eXxh3qwUW+J2yma8yOxuf2IKPL9eOEn8obYqP4XXvw0onPq4WOnqr8qZ4z2
        m8jz4tfhDZtli5Zlm3r2cw0b1ZnIrj516uYQaVS/odkHkf05p2lE9f1lo+yOf96nmEVasYUFvx3vhHT7
        o/ijGfGo0motxanT5eWjLc9fYCGc4Ue1+IhJ+axRPIdV3Wnt9rPix6bq5vi6Pz5dvL4hngqIvDhO5xY3
        c++0xcUTy1/YnfGctTi/XbZWa8WbcvW9Ac/gr3mj+l98CcG/t2mtOjk0GhWTi9O2InfUimqjCZOOcqr3
        c5V6o3MzjQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAANDlv5GTrdV2EHH5AAAAAElFTkSuQmCC
</value>
  </data>
</root>